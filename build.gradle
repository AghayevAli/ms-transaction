plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'org.owasp.dependencycheck' version '9.0.9'
}

group = 'az.kapitalbank'
version = properties.projectVersion

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "2023.0.3")
}

jar {
    enabled = false
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation "io.micrometer:micrometer-tracing-bridge-otel"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp"
    runtimeOnly "io.micrometer:micrometer-registry-prometheus"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "io.github.openfeign:feign-okhttp"
    implementation "io.github.openfeign:feign-micrometer"
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    implementation "net.logstash.logback:logstash-logback-encoder:${logstashLogbackVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    /*** postgresql ***/
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    runtimeOnly "org.postgresql:postgresql"
    implementation "org.liquibase:liquibase-core"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

checkstyle {
    toolVersion '10.14.2'
    configDirectory = file("${rootProject.projectDir}/checkstyle")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'az/kapitalbank/customer/Application.class',
                    'az/kapitalbank/customer/client/**',
                    'az/kapitalbank/customer/config/**',
                    'az/kapitalbank/customer/dao/**',
                    'az/kapitalbank/customer/exception/**',
                    'az/kapitalbank/customer/mapper/**',
                    'az/kapitalbank/customer/messaging/event/**',
                    'az/kapitalbank/customer/model/**',
            ])
        }))
    }

    sonar {
        properties {
            property 'sonar.coverage.exclusions',
                    "**/Application.java," +
                            "**/client/**," +
                            "**/config/**," +
                            "**/dao/**," +
                            "**/exception/**," +
                            "**/mapper/**," +
                            "**/model/**,"
        }
    }
}